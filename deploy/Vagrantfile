# -*- mode: ruby -*-
# vi: set ft=ruby :

require 'fileutils'

# number of instances
$spark_num_instances = 3
$cassandra_num_instances = 3 

# load configuration from config.rb
CONFIG = File.join(File.dirname(__FILE__), "config.rb")
if File.exist?(CONFIG)
  require CONFIG
end

require "yaml"

_config = YAML.load(File.open(File.join(File.dirname(__FILE__), "vagrantconfig.yaml"), File::RDONLY).read)
CONF = _config

ENV['VAGRANT_DEFAULT_PROVIDER'] ||= 'docker'

Vagrant.require_version ">= 1.6.0"

VAGRANTFILE_API_VERSION = "2"
Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

  # image definition
  config.vm.define "image", autostart: false do |image|
    image.vm.provider "docker" do |d|
      d.build_dir = "./spark"
      d.build_args = ["-t",CONF["docker"]["spark-image"]]
      #d.vagrant_machine = "boot2docker"
      #d.vagrant_vagrantfile = "./boot2docker/Vagrantfile"
    end
    image.ssh.username = "root"
    image.ssh.port = 22
  end

  # image definition
  config.vm.define "image", autostart: false do |image|
    image.vm.provider "docker" do |d|
      d.build_dir = "./cassandra"
      d.build_args = ["-t",CONF["docker"]["cassandra-image"]]
      #d.vagrant_machine = "boot2docker"
      #d.vagrant_vagrantfile = "./boot2docker/Vagrantfile"
    end
    image.ssh.username = "root"
    image.ssh.port = 22
  end


  # nodes definition
  (1..$spark_num_instances).each do |i|
    config.vm.define "scale#{i}" do |scale|
      # docker container settings
      scale.vm.provider "docker" do |d|
        d.image = CONF["docker"]["spark-image"]
        d.create_args = ["--privileged=true", "-m", CONF["docker"]['memory_size'] + "m"]
        if "#{i}" == "1"
            d.ports = [CONF["namenode_ui_port"] + ":50070", CONF["yarn_ui_port"] + ":8088", CONF["hbase_ui_port"] + ":60010"]
        end
        #d.vagrant_machine = "boot2docker"
        #d.vagrant_vagrantfile = "./boot2docker/Vagrantfile"
      end
      scale.ssh.username = "root"
      scale.ssh.port = 22
      scale.vm.hostname = "scale#{i}.docker"
      scale.vm.synced_folder "./", "/scale-shared/"
    end
  end

end
